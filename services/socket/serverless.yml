service: socket-service

provider:
  name: aws
  stage: dev
  memorySize: 128
  environment:
    AWS_REGION_T: !Ref AWS::Region
    SOCKET_CONNECTIONS_TABLE: !Ref ConnectionTable
    WS_ENDPOINT: wss://7hivo8j534.execute-api.us-east-1.amazonaws.com/dev
    ConnectionIndex: recordid-index
  iamRoleStatements:
    - Effect: Allow
      Action:
        - apigatewaymanagementapi:*
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:us-east-1:574134043875:table/ConnectionTable/index/recordid-index 

resources:
  Resources:
    ConnectionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ConnectionTable
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          - AttributeName: recordid
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: recordid-index
            KeySchema:
              - AttributeName: recordid
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
  Outputs:
    ConnectionTable:
      Value:
        Ref: ConnectionTable
      Export:
        Name: ConnectionTable

functions:
  SendSignal:
    handler: src/sendSignal.handler
    events:
      - http:
          path: sendSignalT/{id}
          method: post
  OnConnect:
    handler: src/onConnect.handler
    events:
      - websocket:
          route: $connect
  OnDisconnect:
    handler: src/onDisconnect.handler
    events:
      - websocket:
          route: $disconnect
  OnMessage:
    handler: src/onMessage.handler
    events:
      - websocket:
          route: $default

plugins:
  - serverless-offline