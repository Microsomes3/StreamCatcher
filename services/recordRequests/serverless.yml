service: griffin-recordservice-service


provider:
  name: aws
  memorySize: 128
  environment:
    RECORD_REQUEST_TABLE: !Ref RecordRequestTable
    AWS_REGION_T: !Ref AWS::Region
    PROCESS_TASK_CREATION_QUEUEUrl: !GetAtt ProcessTaskCreationQueue.QueueUrl
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt RecordRequestTable.Arn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:574134043875:table/RecordRequestTable/index/username-index"
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: !GetAtt ProcessTaskCreationQueue.Arn
    - Effect: Allow
      Action:
        - Cloudformation:*
      Resource: "*"
    - Effect: Allow
      Action:
        - cloudformation:CreateStack
        - ecs:*
        - logs:*
        - iam:*
      Resource: "*"
    - Effect: Allow
      Action:
        - events:*
      Resource: "*"
      
resources:
  Outputs:
    RecordRequestTable:
      Value: !Ref RecordRequestTable
      Export:
        Name: RecordRequestTable
    RecordRequestTableArn:
      Value: !GetAtt RecordRequestTable.Arn
      Export:
        Name: RecordRequestTableArn
    RecordRequestUsernameIndex:
      Value: "arn:aws:dynamodb:us-east-1:574134043875:table/RecordRequestTable/index/username-index"
      Export:
        Name: RecordRequestUsernameIndex
    RecordRequestUsernameIndexName:
      Value: "username-index"
      Export:
        Name: RecordRequestUsernameIndexName
  Resources:
    ProcessTaskCreationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ProcessTaskCreationQueue
        VisibilityTimeout: 300
        MessageRetentionPeriod: 1209600
        ReceiveMessageWaitTimeSeconds: 20
    RecordRequestTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: RecordRequestTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: username-index
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    
functions:
  getRecordRequestByUser:
    handler: .build/getRecordRequestByUser.handler
    events:
      - http:
          path: /recordRequest/{username}
          method: get
          cors: true
  getAllRecordRequests:
    handler: .build/getAllRecordRequests.handler
    events:
      - http:
          path: /recordRequests
          method: get
          cors: true
  deleteRecordRequest:
    handler: .build/deleteRecordRequestById.handler
    events:
      - http:
          path: /recordRequestd/{id}
          method: delete
          cors: true
  getRecordRequestById:
    handler: .build/getRecordRequestById.handler
    events:
      - http:
          path: /recordRequestById/{id}
          method: get
          cors: true
  recordRequest:
    handler: .build/addRecordRequest.handler
    memorySize: 128
    events:
      - http:
          path: /recordRequest
          method: post
          cors: true
      
plugins:
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 3