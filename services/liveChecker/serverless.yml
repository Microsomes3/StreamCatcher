service: griffin-livechecker-service


provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  environment:
    LIVE_CHECKER_TABLE: !Ref LiveCheckerTable
    AWS_REGION_T: !Ref AWS::Region
    YOUTUBERS_TO_CHECK_TABLE: !Ref YoutubersToCheckTable
    YOUTUBERS_TO_CHECK_QUEUEUrl: !GetAtt YoutubersToCheckQueue.QueueUrl
    CALLBACK_URLS_FOR_LIVE_YOUTUBERS_TABLE: !Ref CallBackUrlsForLiveYoutubers
    AGGREGATE_CURRENT_YOUTUBER_LIVE_TABLE: !Ref AggregateCurrentYoutuberLive
    CALLBACK_FOR_RECORD_SERVICE: ${param:recordCallBackUrl}
    RECORD_REQUEST_TABLE: ${param:recordRequestTable}
    RECORD_REQUEST_TABLE_ARN: ${param:recordRequestTableArn}
    YOUTUBE_TO_ACCOUNT: !Ref YoutubersToAccount
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt LiveCheckerTable.Arn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !GetAtt YoutubersToAccount.Arn
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt YoutubersToCheckTable.Arn

    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt AggregateCurrentYoutuberLive.Arn

    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueUrl
      Resource: !GetAtt YoutubersToCheckQueue.Arn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !GetAtt CallBackUrlsForLiveYoutubers.Arn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:574134043875:table/CallBackUrlsForLiveYoutubers/index/username-index"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: ${param:recordRequestTableArn}
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:574134043875:table/RecordRequestTable/index/username-index"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:574134043875:table/YoutubersToCheckTable/index/priority-index"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !GetAtt YoutubeLiveScheduleTable.Arn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:us-east-1:574134043875:table/griffin-livechecker-service-dev-YoutubersToAccount-1P90FHFY1WGL9/index/accountId-index"
  
resources:
  Outputs:
    AggregateCurrentLiveTable:
      Value: !Ref AggregateCurrentYoutuberLive
      Export:
        Name: AggregateLiveTable
    AggregateCurrentLiveTableArn:
      Value: !GetAtt AggregateCurrentYoutuberLive.Arn
      Export:
        Name: AggregateLiveTableArn
    AggregateIsLiveIndex:
      Value: arn:aws:dynamodb:us-east-1:574134043875:table/AggregateCurrentYoutuberLive/index/isLive-index
      Export:
        Name: AggregateIsLiveIndex
  Resources:
    YoutubeLiveScheduleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: YoutubeLiveScheduleTable
        AttributeDefinitions:
          - AttributeName: youtuberid
            AttributeType: S
          - AttributeName: date
            AttributeType: S
        KeySchema:
          - AttributeName: youtuberid
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    AggregateCurrentYoutuberLive:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AggregateCurrentYoutuberLive
        AttributeDefinitions:
          - AttributeName: youtubeusername
            AttributeType: S
        KeySchema:
          - AttributeName: youtubeusername
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    LiveCheckerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: LiveCheckerTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: friendlyDate
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: friendlyDate-index
            KeySchema:
              - AttributeName: friendlyDate
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    YoutubersToAccount:
      Type: AWS::DynamoDB::Table
      Properties:
        KeySchema:
          - AttributeName: ytusernameaccountid
            KeyType: HASH
          - AttributeName: accountId
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: ytusernameaccountid
            AttributeType: S
          - AttributeName: accountId
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: accountId-index
            KeySchema:
              - AttributeName: accountId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    YoutubersToCheckTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: YoutubersToCheckTable
        AttributeDefinitions:
          - AttributeName: youtubeusername
            AttributeType: S
          - AttributeName: priority
            AttributeType: N
          - AttributeName: type
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: type-index
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: priority-index
            KeySchema:
              - AttributeName: priority
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        KeySchema:
          - AttributeName: youtubeusername
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    
    CallBackUrlsForLiveYoutubers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CallBackUrlsForLiveYoutubers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    
    DeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: DeadLetterQueue
        VisibilityTimeout: 90
        MessageRetentionPeriod: 345600
        ReceiveMessageWaitTimeSeconds: 20

    YoutubersToCheckQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: YoutubersToCheckQueue
        VisibilityTimeout: 90
        MessageRetentionPeriod: 345600
        ReceiveMessageWaitTimeSeconds: 20
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt DeadLetterQueue.Arn
          maxReceiveCount: 3
functions:
  AddYoutuberUsername:
    handler: .build/addYoutuberUsername.handler
    events:
      - http:
          path: /addYoutuberUsername
          method: post
          cors: true

  AllAggregateCurrentYoutuberLive:
    handler: allAggregateCurrentYoutuberLive.allAggregateCurrentYoutuberLive
    events:
      - http:
          path: /allAggregateCurrentYoutuberLive
          method: get
  OnLiveCheckerInsert:
    handler: .build/onLiveCheckerInsert.handler
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - LiveCheckerTable
              - StreamArn
          batchSize: 10
          startingPosition: TRIM_HORIZON
  ProcessYoutubersToCheckQueue:
    handler: .build/processYoutubersToCheck.handler
    timeout: 90
    memorySize: 200
    layers:
      - ${param:ytdlpArn}
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - YoutubersToCheckQueue
              - Arn
          batchSize: 1          
  ScheduleYoutubersToCheck:
    handler: .build/scheduleUsernamesTOCheck.handler
    events:
      - schedule: rate(30 minutes)
  SchdulePriorityYoutubersToCheck:
    handler: .build/schedulePriorityUsernamesTOCheck.handler
    events:
      - schedule: rate(1 minute)
  GetLiveStatuses:
    handler: .build/getLiveStatuses.handler
    events:
      - http:
          path: /getLiveStatuses
          method: get
          cors: true
          
  GetLiveStatusByUsername:
    handler: .build/getLiveStatusByUsername.handler
    events:
      - http:
          path: /getLiveStatus/{username}
          method: get
          cors: true
        
plugins:
  - serverless-prune-plugin


custom:
  prune:
    automatic: true
    number: 3