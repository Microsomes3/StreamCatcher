service: griffin-autoscheduler-service

provider:
  name: aws
  memorySize: 128
  environment:
    AWS_REGION_T: !Ref AWS::Region
    AUTO_RECORD_TABLE: !ImportValue RecordAutoRecordTable
    AGGREGATE_CURRENT_YOUTUBER_LIVE_TABLE: !ImportValue AggregateLiveTable

    AUTO_RECORD_TABLEArn: !ImportValue RecordAutoRecordTableArn
    AGGREGATE_CURRENT_YOUTUBER_LIVE_TABLEArn: !ImportValue AggregateLiveTableArn
    RECORD_REQUEST_TABLE: !ImportValue RecordRequestTable
    RECORD_RECORD_USERNAME_INDEX: !ImportValue RecordRequestUsernameIndexName
    RECORD_STATUS_TABLE: !ImportValue RecordStatusesTable
    RECORD_STATUS_TABLEArn: !ImportValue RecordStatusesTableArn

  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !ImportValue RecordAutoRecordTableArn
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !ImportValue AggregateLiveTableArn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !ImportValue RecordRequestTableArn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !ImportValue RecordRequestUsernameIndex
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !ImportValue RecordStatusesTableArn
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !ImportValue RecordStatusesFriendlyDateIndex
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: !ImportValue RecordAutoRecordDateIndexArn
    - Effect: Allow
      Action:
        - cloudformation:*
      Resource: "*"
    - Effect: Allow
      Action:
        - ecs:*
      Resource: "*"
    - Effect: Allow
      Action:
        - iam:*
      Resource: "*"
  

resources:
  Resources:
    TaskRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      # Add policies as needed for your specific use case
        ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
    ExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::574134043875:policy/CFFULL
    EC2Task:
      Type: AWS::ECS::TaskDefinition
      Properties:
        Family: !Sub ${AWS::StackName}-EC2Task
        Cpu: 512
        Memory: 1024
        NetworkMode: awsvpc
        ExecutionRoleArn: !GetAtt ExecutionRole.Arn
        TaskRoleArn: !GetAtt TaskRole.Arn
        ContainerDefinitions:
          - Name: !Sub ${AWS::StackName}-EC2Task
            Image: public.ecr.aws/m8l7i2c5/griffin:latest
            Essential: true
            Environment:
              - Name: AWS_REGION_T
                Value: !Ref AWS::Region
              - Name: completionCallbackUrl
                Value: "https://kxb72rqaei.execute-api.us-east-1.amazonaws.com/dev/RecordCompleteCallback"
functions:
  checkSchedule:
    handler: src/checkSchedule.handler
    timeout: 45
    events:
      - schedule: rate(1 minute)
plugins:
  - serverless-prune-plugin


custom:
  prune:
    automatic: true
    number: 3